{"version":3,"sources":["reportWebVitals.ts","componets/all-users-item/index.tsx","componets/all-users-item/all-users-item.tsx","componets/all-users/index.tsx","componets/all-users/all-users.tsx","componets/user/index.tsx","componets/user/user.tsx","componets/repo-list-item/index.tsx","componets/repo-list-item/repo-list-item.tsx","componets/repo-list/index.tsx","componets/repo-list/repo-list.tsx","componets/visible-user/index.tsx","componets/visible-user/visibleUser.tsx","componets/app/index.tsx","componets/app/app.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","AllUsersItem","login","avatar","onClick","className","alt","src","AllUsers","update","useState","data","setData","useLocalStorage","term","setTerm","useEffect","cancelled","axios","get","res","items","catch","err","console","log","component","map","el","to","avatar_url","id","Fragment","type","placeholder","onChange","event","target","value","User","name","bio","followers","following","email","location","public_repos","RepoListItem","forks","star","url","href","RepoList","components","length","filter","item","full_name","indexOf","search","stargazers_count","html_url","VisibleUser","App","setLogin","path","render","exact","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ced870f4.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import AllUsersItem from './all-users-item';\r\n\r\nexport default AllUsersItem;","import React from 'react';\r\nimport './all-users-item.css'\r\n\r\ntype AllUsersItemType = {\r\n    login:string,\r\n    avatar:string,\r\n    onClick: (id:React.MouseEvent)=>void\r\n};\r\n\r\nconst AllUsersItem = ({login,avatar, onClick}:AllUsersItemType) =>{\r\n\r\n    return (\r\n        <span className = 'elements' onClick = {onClick} >\r\n            <span>{login}</span>\r\n            <img alt = 'img' src = {avatar}/>\r\n        </span>\r\n    )\r\n};\r\n\r\nexport default AllUsersItem;","import AllUsers from './all-users';\r\n\r\nexport default AllUsers;","import React, {useState, useEffect} from 'react';\r\nimport AllUsersItem from '../all-users-item';\r\nimport './all-users.css';\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\nimport useLocalStorage from 'react-use-localstorage';\r\n\r\ntype allUsersType = {\r\n    update: (login:string)=> void\r\n}\r\n\r\nconst  AllUsers = ({update}:allUsersType) => {\r\n\r\n    const [data, setData]  = useState<any[]>([]);\r\n    const [term, setTerm] = useLocalStorage('searchUsers','');\r\n    \r\n    \r\n    useEffect(()=>{\r\n        if (term === '') {\r\n            return\r\n        } else {\r\n        let cancelled = false\r\n        axios.get(`https://api.github.com/search/users?q=${term}`)\r\n        .then((res)=>!cancelled && setData(res.data.items))\r\n        .catch((err)=>console.log(err));\r\n        return () =>{cancelled = true}\r\n    }},[term])\r\n\r\n    const component:object[] = data.map((el)=>{\r\n        return(\r\n            <li key = {el.id}  className=\"list-group-item\"> <Link to = 'user'><AllUsersItem login = {el.login} avatar = {el.avatar_url} onClick = {()=>update(el.login)}/></Link></li>\r\n        )\r\n    })\r\n\r\n           \r\n    const onChanged = (event:React.ChangeEvent<HTMLInputElement>) => {\r\n        setTerm(event.target.value)\r\n    };\r\n\r\n        return(\r\n            <React.Fragment>\r\n                <div className = 'input-field'>\r\n                    <input className = 'input' type = 'text' placeholder={'Search for Users'} onChange = {onChanged} value = {term}></input> \r\n                </div>\r\n\r\n                <ul className=\"list-group todo-list\">\r\n                    {component}\r\n                </ul>\r\n            </React.Fragment>\r\n        )\r\n    \r\n};\r\n\r\nexport default AllUsers;","import User from './user';\r\n\r\nexport default User;","import React,{useState,useEffect} from 'react';\r\nimport axios from 'axios';\r\n\r\nimport './user.css';\r\n\r\ntype UserType = {\r\n    login:string\r\n}\r\n\r\nconst User = ({login}:UserType) => {\r\n\r\n    const [data, setData]  = useState<any>('');\r\n\r\n    useEffect(()=>{\r\n        if (login === ''){\r\n            return\r\n        } else {   \r\n        let cancelled = false\r\n        axios.get(`https://api.github.com/users/${login}`)\r\n        .then((res)=>!cancelled && setData(res.data))\r\n        .catch((err)=>console.log(err));\r\n        return () =>{cancelled = true}\r\n    }},[login])\r\n\r\n\r\n    const {login:name, bio, followers, following, email, avatar_url:avatar,location, public_repos } = data;\r\n    \r\n    return(\r\n        <React.Fragment>\r\n        <div className = 'user'>\r\n            <div>\r\n                <img alt='picture' src={avatar}></img>\r\n            </div>\r\n            <ul className = 'user-bio'>\r\n                <li>{name}</li>\r\n                <li>Repositories {public_repos}</li>\r\n                <li>{email}</li>\r\n                <li>{location}</li>\r\n                <li>Folowers {followers} </li>\r\n                <li>Following {following}</li>\r\n            </ul>\r\n        </div>\r\n        <div className = 'text'>{bio}</div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default User;","import RepoList from '../repo-list/repo-list';\r\nimport RepoListItem from './repo-list-item';\r\n\r\nexport default RepoListItem;","import React from 'react';\r\nimport './repo-list-item.css';\r\n\r\ntype RepoListItemType = {\r\n    name:string,\r\n    forks:number,\r\n    star:number,\r\n    url:string\r\n}\r\n\r\nconst RepoListItem = ({name, forks, star,url}:RepoListItemType) => {\r\n    return (\r\n        <div className = 'elements'>\r\n            <div><a href={url}>{name}</a></div>\r\n            <div className = 'elements-position'> \r\n               <div>{forks} Forks</div> \r\n               <div>{star} Stars</div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default RepoListItem;","import RepoList from './repo-list';\r\n\r\nexport default RepoList;","import React, {useState, useEffect} from 'react';\r\nimport './repo-list.css';\r\nimport axios from 'axios';\r\nimport RepoListItem from '../repo-list-item';\r\n\r\ntype RepoListType = {\r\n    login:string\r\n};\r\n\r\nconst RepoList = ({login}:RepoListType) =>{\r\n\r\n\r\n    const [data, setData]  = useState<object[]>([]);\r\n    const [term, setTerm] = useState<string>('');\r\n    \r\n\r\n    useEffect(()=>{\r\n        if(login === '') {\r\n            return\r\n        } else {\r\n        let cancelled = false\r\n        axios.get(`https://api.github.com/users/${login}/repos`)\r\n        .then((res)=>!cancelled && setData(res.data))\r\n        .catch((err)=>console.log(err));\r\n        return () =>{cancelled = true}\r\n    }},[login]);\r\n    \r\n    const onChanged = (event:React.ChangeEvent<HTMLInputElement>) => {\r\n        setTerm(event.target.value)\r\n    };\r\n\r\n    const search = (items:any[], term:string) => {\r\n        if (term.length === 0 ) {\r\n            return items\r\n        }\r\n        \r\n        return items.filter((item)=>{\r\n            return item.full_name.indexOf(term) > -1;\r\n        })\r\n    } \r\n    \r\n    const visibleItems = search(data, term);\r\n\r\n    const components = visibleItems.map((el)=>{\r\n        return(\r\n            <li key = {el.id}  className=\"list-group-item\" ><RepoListItem name = {el.full_name} forks = {el.forks} star = {el.stargazers_count} url= {el.html_url}/></li>\r\n        )   \r\n    });\r\n\r\n    \r\n    return(\r\n        <React.Fragment>\r\n            <div className = 'input-field'>\r\n                <input className = 'input' type = 'text' placeholder={`Search for User's Repositories`} onChange = {onChanged} value = {term}></input> \r\n            </div>\r\n            <ul className=\"list-group todo-list\">\r\n               {components}\r\n            </ul>\r\n    </React.Fragment>\r\n    )\r\n};\r\n\r\nexport default RepoList;","import VisibleUser from './visibleUser';\r\n\r\nexport default VisibleUser;","import React from 'react';\r\nimport User from '../user';\r\nimport RepoList from '../repo-list';\r\n\r\ntype VisibleUserType = {\r\n    login:string\r\n}\r\n\r\nconst VisibleUser = ({login}:VisibleUserType) => {\r\n    if (login === '') {\r\n        return (\r\n            <h2>Please, select a User </h2>\r\n        )\r\n    }\r\n    return (\r\n       <React.Fragment>\r\n           <User login = {login}/>\r\n           <RepoList login = {login}/>\r\n       </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default VisibleUser;\r\n","import App from './app';\r\n\r\nexport default App;\r\n\r\n","import React from 'react';\r\nimport './app.css';\r\n\r\nimport AllUsers from '../all-users';\r\nimport VisibleUser from '../visible-user';\r\nimport {BrowserRouter as Router, Route, Link} from 'react-router-dom';\r\nimport useLocalStorage from 'react-use-localstorage';\r\n\r\n\r\nconst App = () => {\r\n    const [login, setLogin]  = useLocalStorage('user','');\r\n   \r\n    const update = (login:string) => {\r\n        setLogin(login)\r\n    }\r\n\r\n        return(\r\n            <div className = 'app'>\r\n                \r\n                <Router>\r\n                    <Link to ='/'><h3>GitHub Searcher</h3></Link>\r\n                    <Route path = '/' render = {()=><AllUsers update = {update}/>} />\r\n                    <Route path = '/user' exact render = {()=><VisibleUser login = {login}/>} />\r\n                </Router>\r\n            </div>\r\n        )\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport App from './componets/app';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}